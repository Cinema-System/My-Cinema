-- ### 관리자 ###




-- # DEJH에 지역을 등록한다.
-- 지역을 등록한다.
INSERT INTO LOCAL(LOACLNO, LOCALNAME) VALUES(:LOCALNO, :LOCALNAME);
-- 지역을 제거한다.
DELETE FROM LOCAL WHERE LOCALNO = :LOCALNO;




-- # DEJH에 영화관을 등록한다.
-- 영화관을 등록한다.
INSERT INTO CINEMA(CINEMANO, LOCALNO, CINEMANAME) VALUES(:CINEMANO, :LOCALNO, :CINEMANAME);
-- 영화관을 제거한다.
DELETE FROM CINEMA WHERE CINEMANO = :CINEMANO;




-- # 영화관에 상영관을 등록한다.
-- 상영관을 등록한다.
INSERT INTO THEATER(THEATERNO, CINEMANO, SCRWAYNO, SEATTL, SEATCNT) VALUES(:THEATERNO, :CINEMANO, :SCRWAYNO, :SEATTL, :SEATCNT);
-- 상영관을 제거한다.
DELETE FROM THEATER WHERE THEATERNO = :THEATERNO AND CINEMANO = :CINEMANO;




-- # 상영방식을 등록한다.
-- 상영방식을 등록한다.
INSERT INTO SCREENWAY(SCRWAYNO, SCRWAY, SCRPRICE) VALUES(:SCRWAYNO, :SCRWAY, :SCRPRICE);
-- 상영방식을 제거한다.
DELETE FROM SCREENWAY WHERE SCRWAYNO = :SCRWAYNO;
-- 상영방식을 수정한다.(상영금액만 수정가능)
UPDATE SCREENWAY 
SET SCRPRICE = :SCRPRICE 
WHERE SCRWAYNO = :SCRWAYNO;


-- # 관객방식을 등록한다.
-- 관객방식을 등록한다.
INSERT INTO MOVIEGOERS(GOERSNO, GOERSWAY, GOERSDC) VALUES(:GOERSNO, :GOERSWAY, :GOERSDC);
-- 관객방식을 제거한다.
DELETE FROM MOVIEGOERS WHERE GOERSNO = :GOERSNO;
-- 관객방식을 수정한다. (할인율만 수정가능)
UPDATE MOVIEGOERS 
SET GOERSDC = :GOERSDC 
WHERE GOERSNO = :GOERSNO;



-- # DEJH에 영화를 등록한다.
-- 영화를 등록한다.
INSERT INTO MOVIE(MVNO, MVNAME, MVRELEASEDATE, MVDIRECTOR, MVCLASS, MVRUNTIME, MVGENRE, MVSTORY, MVPREVIEW, MVPOST) 
VALUES(:MVNO, :MVNAME, :MVRELEASEDATE, :MVDIRECTOR, :MVCLASS, :MVRUNTIME, :MVGENRE, :MVSTORY, :MVPREVIEW, :MVPOST);

INSERT INTO MOVIESCHEDULE_INFO(MVNO, STARTEDATE, CLOSEDATE, ISMOVIE) 
VALUES(:MVNO, :STARTEDATE, :CLOSEDATE, :ISMOVIE);

INSERT INTO MOVIE_INFO(MVNO, MVBOOKRANK, MVBOOKRATE) 
VALUES(:MVNO, :MVBOOKRANK, :MVBOOKRATE);

INSERT INTO ACTOR_INFO(MVNO, ACTORNAME) 
VALUES(:MVNO, :ACTORNAME);

-- 영화를 제거한다.(상영일정에 등록되어 있지 않은지 조회)
SELECT MOVIE.MVNO
FROM MOVIE, SCHEDULE
WHERE MOVIE.MVNAME = :MVNAME AND MOVIE.MVNO = SCHEDULE.MVNO;

DELETE FROM MOVIE WHERE MVNO = "MVNO";

DELETE FROM MOVIESCHEDULE_INFO WHERE MVNO = "MVNO";

UPDATE MOVIE_INFO SET MVBOOKRANK = NULL WHERE MVNO = "MVNO";

DELETE FROM ACTOR_INFO WHERE MVNO = "MVNO";




-- # 상영일정을 등록한다.
-- 영화 상영 일정을 등록한다.
INSERT INTO SCHEDULE(SCHNO, CINEMANO, THEATERNO, MVNO, SCHTIME) VALUES(:SCHNO, :CINEMANO, :THEATERNO, :MVNO, :SCHTIME);
-- 영화 상영 일정을 제거한다.
DELETE FROM SCHEDULE WHERE SCHNO = :SCHNO;




-- # 고객의 정보를 조회한다.
-- 고객의 회원정보를 조회한다.
SELECT NONMEMBERS_INFO.* 
FROM USERS, NONMEMBERS_INFO 
WHERE USERS.USERCODE = 0;

SELECT MEMBERS_INFO.* 
FROM USERS, MEMBERS_INFO 
WHERE USERS.USERCODE = 1;



-- 고객의 결제 내역을 조회한다.
SELECT PAYLIST_INFO.* 
FROM USERS, PAYLIST_INFO
WHERE USERS.USERID = PAYLIST_INFO.USERID AND PAYLIST_INFO.USERID = :USERID;



-- 고객의 포인트 내역을 조회한다.
SELECT POINTLIST_INFO.* 
FROM MEMBERS_INFO, POINTLIST_INFO
WHERE MEMBERS_INFO.MEMID = POINTLIST_INFO.MEMID AND POINTLIST_INFO.MEMID = :MEMID;

-- 고객정보를 삭제한다.
DELETE FROM USERS WHERE USERID = :USERID;

DELETE FROM MEMBERS_INFO WHERE MEMID = :USERID;




-- # 관리자로 로그인한다.
-- 로그인한다.
SELECT MANAGERS_INFO.* 
FROM USERS, MANAGERS_INFO
WHERE USERS.USERCODE = 2;








-- ### 고객 ###




-- # 회원가입한다.

-- 회원정보를 입력한다.
-- INSERT INTO USERS VALUES(식별아이디, 구분코드);
-- INSERT INTO MEMBERS_INFO VALUES(아이디, 비밀번호, 이름, 이메일, 전화번호, 생년월일, 본인인증여부, 시청가능여부, 누적포인트);
INSERT INTO USERS(USERID, USERCODE) VALUES(:USERID, 1);

INSERT INTO MEMBERS_INFO(MEMID, MEMPWD, MEMNAME, MEMEMAIL, MEMPHONE, MEMBIRTH, ISVERIFICATION, ISCLASS, TOTALPOINT)
    VALUES(:MEMID, :MEMPWD, :MEMNAME, :MEMEMAIL, :MEMPHONE, :MEMBIRTH, 0, 0, 0);


-- 본인인증 및 회원가입완료한다.
UPDATE MEMBERS_INFO
SET ISVERIFICATION = 1, TOTALPOINT = 0
WHERE COUNT(
    SELECT VERIFICATION.VERNAME
    FROM VERIFICATION AS VER, MANAGERS_INFO AS MEM
    WHERE VER.VERNAME = MEM.MEMNAME AND VER.VERPHONE = MEM.MEMPHONE AND VER.VERBIRTH = MEM.MEMBIRTH
) = 1;

UPDATE MEMBERS_INFO
SET ISCLASS = 1
WHERE ISVERIFICATION = 1 AND MEMBIRTH > 01/12/31;


-- 최애장르를 입력한다.
-- INSERT INTO BESTGENRE_INFO VALUES(회원정보_아이디, 최애장르);
INSERT INTO BESTGENRE_INFO(MEMID, BESTGENRE) VALUES(:MEMID, :BESTGENRE);


-- 회원 정보를 수정한다.
UPDATE MEMBERS_INFO 
SET MEMPWD = :MEMPWD, MEMNAME = :MEMNAME, MEMEMAIL = :MEMEMAIL
WHERE MEMID = :MEMID;

UPDATE BESTGENRE_INFO
SET BESTGENRE = :BESTGENRE
WHERE MEMID = :MEMID;


-- 회원탈퇴한다.
DELETE FROM USERS WHERE USERID = :MEMID;
DELETE FROM MEMBERS_INFO WHERE MEMID = :MEMID;
DELETE FROM BESTGENRE_INFO WHERE MEMID = :MEMID;


-- 회원정보를 조회한다.
-- -- 회원정보를 조회한다.
SELECT *
FROM MEMBERS_INFO
WHERE MEMID = :MEMID;


-- -- 포인트 정보를 조회한다.
SELECT *
FROM POINTLIST_INFO
WHERE MEMID = :MEMID;




-- # DEJH에 로그인한다.

-- 회원으로 로그인한다.
SELECT MEMBERS_INFO.MEMID, MEMBERS_INFO.MEMPWD 
FROM USERS, MEMBERS_INFO
WHERE USERS.USERCODE = 1;
-- 비회원으로 로그인한다.
INSERT INTO USERS(USERID, USERCODE) VALUES(:USERID, 0);

INSERT INTO NONMEMBERS_INFO(NONMEMID, NONMEMPWD, NONMEMNAME, NONMEMPHONE, NONMEMBIRTH, ISVERIFICATION, ISCLASS)
VALUES(:NONMEMID, :NONMEMPWD, :NONMEMNAME, :NONMEMPHONE, :NONMEMBIRTH,, 0, 0);

UPDATE NONMEMBERS_INFO
SET ISVERIFICATION = 1
WHERE COUNT(
    SELECT VERIFICATION.VERNAME
    FROM VERIFICATION AS VER, NONMEMBERS_INFO AS NON
    WHERE VER.VERNAME = NON.NONMEMNAME AND VER.VERPHONE = NON.NONMEMPHONE AND VER.VERBIRTH = NON.NONMEMBIRTH
) = 1;

UPDATE NONMEMBERS_INFO
SET ISCLASS = 1
WHERE ISVERIFICATION = 1 AND NONMEMBIRTH > 01/12/31;

SELECT NONMEMBERS_INFO.NONMEMID, NONMEMBERS_INFO.NONMEMPWD 
FROM USERS, NONMEMBERS_INFO
WHERE USERS.USERCODE = 0;

-- # 등록된 영화를 조회한다.
-- 영화를 영화이름으로 검색하여 조회한다. (영화정보)
SELECT * 
FROM MOVIE 
WHERE MVNAME = :MVNAME;

-- 영화를 선호장르별 조회한다. (메인페이지)
SELECT MOVIE.* 
FROM MOVIE, BESTGENRE_INFO
WHERE BESTGENRE_INFO.MEMID = :MEMID AND BESTGENRE_INFO.BESTGENRE = MOVIE.MVGENRE;

-- 영화를 예매순위로 조회한다.
SELECT * 
FROM MOVIE
WHERE MVNO = 
    (SELECT MVNO
    FROM MOVIE_INFO
    WHERE MVBOOKRANK BETWEEN 1 AND 5
    ORDER BY MVBOOKRANK);    

-- 영화를 장르별로 조회한다.
SELECT * 
FROM MOVIE 
WHERE MVGENRE = :MVGENRE;




-- # 티켓을 예매한다.(= 만든다)
-- -- 영화를 예매한다.
/*
지역별 예매 방식 : 지역 ㅡ> 영화관 ㅡ> 상영관 + 상영일정 ㅡ> 영화
*/
SELECT MVNO, THEATERNO
FROM  SCHEDULE 
WHERE SCHTIME = :SCHTIME AND THEATERNO =
    (SELECT THEATERNO
    FROM THEATER 
    WHERE CINEMANO = 
        (SELECT CINEMANO
        FROM CINEMA
        WHERE CINEMANAME = :CINEMANAME AND LOCALNO = 
            (SELECT LOACLNO
            FROM LOCAL
            WHERE LOCALNAME = :LOCALNAME)));

SELECT MVNAME
FROM MOVIE
WHERE MVNO = "MVNO";

SELECT SEATNO
FROM SEAT AS S, MEMBERS_INFO AS M
WHERE S.CINEMANO = :CINEMANO 
    AND S.THEATERNO = :THEATERNO 
    AND S.SCHNO =
        (SELECT SCHNO
        FROM SCHEDULE
        WHERE SCHTIME = :SCHTIME)
    AND S.ISEMPTY = 1
    AND M.ISCLASS = 1;

INSERT INTO BOOKSEAT_INFO(BOOKINGNO, CINEMANO, THEATERNO, SCHNO, SEATNO, GOERSNO) VALUES("BOOKINGNO", :CINEMANO, :THEATERNO, "SCHNO", :SEATNO, :GOERSNO);
INSERT INTO BOOKING(BOOKER_INFO, GOERSCNT, BOOKINGDATE) VALUES("BOOKINGNO", "GOERSCNT", GETDATE());
INSERT INTO PAYING(PAYNO, BOOKINGNO, PAYWAYNO) VALUES("PAYNO", "BOOKINGNO", 0);
UPDATE SEAT
SET ISEMPTY = 1
WHERE SEATNO = :SEATNO;
/*
영화별 예매 방식: 영화 ㅡ> 지역 ㅡ> 영화관 ㅡ> 상영관 + 상영일정
*/
SELECT MVNO
FROM MOVIE
WHERE MVNAME = :MVNAME;

SELECT THEATERNO
FROM  SCHEDULE 
WHERE SCHTIME = :SCHTIME AND MVNO = "MVNO" AND THEATERNO =
    (SELECT THEATERNO
    FROM THEATER 
    WHERE CINEMANO = 
        (SELECT CINEMANO
        FROM CINEMA
        WHERE CINEMANAME = :CINEMANAME AND LOCALNO = 
            (SELECT LOACLNO
            FROM LOCAL
            WHERE LOCALNAME = :LOCALNAME)));

SELECT SEATNO
FROM SEAT AS S, MEMBERS_INFO AS M
WHERE S.CINEMANO = :CINEMANO 
    AND S.THEATERNO = :THEATERNO 
    AND S.SCHNO =
        (SELECT SCHNO
        FROM SCHEDULE
        WHERE SCHTIME = :SCHTIME)
    AND S.ISEMPTY = 1
    AND M.ISCLASS = 1;

INSERT INTO BOOKSEAT_INFO(BOOKINGNO, CINEMANO, THEATERNO, SCHNO, SEATNO, GOERSNO) VALUES("BOOKINGNO", :CINEMANO, :THEATERNO, "SCHNO", :SEATNO, :GOERSNO);
INSERT INTO BOOKING(BOOKER_INFO, GOERSCNT, BOOKINGDATE) VALUES("BOOKINGNO", "GOERSCNT", GETDATE());
INSERT INTO PAYING(PAYNO, BOOKINGNO, PAYWAYNO) VALUES("PAYNO", "BOOKINGNO", 0);

UPDATE SEAT
SET ISEMPTY = 1
WHERE SEATNO = :SEATNO;


-- 비회원이 예매한다.
-- -- 영화를 예매한다.
/*
지역별 예매 방식 : 지역 ㅡ> 영화관 ㅡ> 상영관 + 상영일정 ㅡ> 영화
*/
SELECT MVNO, THEATERNO
FROM  SCHEDULE 
WHERE SCHTIME = :SCHTIME AND THEATERNO =
    (SELECT THEATERNO
    FROM THEATER 
    WHERE CINEMANO = 
        (SELECT CINEMANO
        FROM CINEMA
        WHERE CINEMANAME = :CINEMANAME AND LOCALNO = 
            (SELECT LOACLNO
            FROM LOCAL
            WHERE LOCALNAME = :LOCALNAME)));

SELECT MVNAME
FROM MOVIE
WHERE MVNO = "MVNO";

SELECT SEATNO
FROM SEAT AS S, NONMEMBERS_INFO AS N
WHERE S.CINEMANO = :CINEMANO 
    AND S.THEATERNO = :THEATERNO 
    AND S.SCHNO =
        (SELECT SCHNO
        FROM SCHEDULE
        WHERE SCHTIME = :SCHTIME)
    AND S.ISEMPTY = 1
    AND N.ISCLASS = 1;

INSERT INTO BOOKSEAT_INFO(BOOKINGNO, CINEMANO, THEATERNO, SCHNO, SEATNO, GOERSNO) VALUES("BOOKINGNO", :CINEMANO, :THEATERNO, "SCHNO", :SEATNO, :GOERSNO);
INSERT INTO BOOKING(BOOKER_INFO, GOERSCNT, BOOKINGDATE) VALUES("BOOKINGNO", "GOERSCNT", GETDATE());
INSERT INTO PAYING(PAYNO, BOOKINGNO, PAYWAYNO) VALUES("PAYNO", "BOOKINGNO", 0);

UPDATE SEAT
SET ISEMPTY = 1
WHERE SEATNO = :SEATNO;
/*
영화별 예매 방식: 영화 ㅡ> 지역 ㅡ> 영화관 ㅡ> 상영관 + 상영일정
*/
SELECT MVNO
FROM MOVIE
WHERE MVNAME = :MVNAME;

SELECT THEATERNO
FROM  SCHEDULE 
WHERE SCHTIME = :SCHTIME AND MVNO = "MVNO" AND THEATERNO =
    (SELECT THEATERNO
    FROM THEATER 
    WHERE CINEMANO = 
        (SELECT CINEMANO
        FROM CINEMA
        WHERE CINEMANAME = :CINEMANAME AND LOCALNO = 
            (SELECT LOACLNO
            FROM LOCAL
            WHERE LOCALNAME = :LOCALNAME)));

SELECT SEATNO
FROM SEAT AS S, NONMEMBERS_INFO AS N
WHERE S.CINEMANO = :CINEMANO 
    AND S.THEATERNO = :THEATERNO 
    AND S.SCHNO =
        (SELECT SCHNO
        FROM SCHEDULE
        WHERE SCHTIME = :SCHTIME)
    AND S.ISEMPTY = 1
    AND N.ISCLASS = 1;

INSERT INTO BOOKSEAT_INFO(BOOKINGNO, CINEMANO, THEATERNO, SCHNO, SEATNO, GOERSNO) VALUES("BOOKINGNO", :CINEMANO, :THEATERNO, "SCHNO", :SEATNO, :GOERSNO);
INSERT INTO BOOKING(BOOKER_INFO, GOERSCNT, BOOKINGDATE) VALUES("BOOKINGNO", "GOERSCNT", GETDATE());
INSERT INTO PAYING(PAYNO, BOOKINGNO, PAYWAYNO) VALUES("PAYNO", "BOOKINGNO", 0);

UPDATE SEAT
SET ISEMPTY = 1
WHERE SEATNO = :SEATNO;

-- 회원이 예매를 취소한다. 
DELETE FROM BOOKING WHERE BOOKINGNO = :BOOKINGNO AND BOOKINGDATE > BOOKINGDATE + 00:05:00;

DELETE FROM BOOKSEAT_INFO WHERE BOOKINGNO = "BOOKINGNO";

DELETE FROM PAYING WHERE BOOKINGNO = "BOOKINGNO";

UPDATE SEAT
SET ISEMPTY = 0
WHERE SEATNO = :SEATNO;


-- # 티켓을 결제한다.
-- 결제 방식을 선택한다.
SELECT PAYWAYNO
FROM PAYWAY
WHERE PAYWAYCODE = :PAYWAYCODE;

-- -- 신용카드로 결제한다.
INSERT INTO CREDITCARD_INFO(PAYWAYNO, CARDNAME, CARDNUM) VALUES(:PAYWAYNO, :CARDNAME, :CARDNUM);

UPDATE PAYING 
SET PAYWAYNO = :PAYWAYNO;

-- -- 무통장입금으로 결제한다.
INSERT INTO DEPOSIT_INFO(PAYWAYNO, BANKNAME, ACOUNTNUM) VALUES(:PAYWAYNO, :BANKNAME, :ACOUNTNUM);

UPDATE PAYING 
SET PAYWAYNO = :PAYWAYNO;

-- -- 인터넷결제로 결제한다.
INSERT INTO ONLINEPAY_INFO(PAYWAYNO, QRCODE) VALUES(:PAYWAYNO, :QRCODE);

UPDATE PAYING 
SET PAYWAYNO = :PAYWAYNO;

-- 포인트를 활용한다.
-- -- 포인트를 적립한다.
INSERT INTO POINT VALUES("POINTNO", :MEMID, "PAYNO", 1, 0);
INSERT INTO POINTLIST_INFO VALUES("POINTNO", :MEMID, GETDATE(), 1);
-- -- 포인트를 소모한다.
INSERT INTO POINT VALUES("POINTNO", :MEMID, "PAYNO", 0, 0);
INSERT INTO POINTLIST_INFO VALUES("POINTNO", :MEMID, GETDATE(), 1);

-- 결제를 완료한다.(예매율 정보 UPDATE)
UPDATE PAYING
SET PAYWAYNO = "PAYWAYNO";

INSERT INTO PAYLIST_INFO VALUES("PAYNO", :USERID, GETDATE(), 1, 0);   

UPDATE MOVIE_INFO
SET MVBOOKRATE = "MVBOOKRATE", MVBOOKRANK = "MVBOOKRANK"
WHERE MVNO = "MVNO";

-- 티켓정보를 조회한다.
SELECT * 
FROM VIEW
WHERE USERID = :USERID;
-- 결제내역정보를 조회한다.
SELECT * 
FROM PAYLIST_INFO
WHERE USERID = :USERID;
-- 결제 완료된 예매정보를 취소한다. (예매율 정보 UPDATE)
INSERT INTO PAYLIST_INFO VALUES("PAYNO", :USERID, GETDATE(), 0, 0); 
INSERT INTO POINTLIST_INFO VALUES("POINTNO", :MEMID, GETDATE(), 0);

DELETE FROM PAYING WHERE PAYNO = "PAYNO";
DELETE FROM POINT WHERE PAYNO = "PAYNO";

UPDATE MOVIE_INFO
SET MVBOOKRATE = "MVBOOKRATE", MVBOOKRANK = "MVBOOKRANK"
WHERE MVNO = "MVNO";

-- 영수증 정보를 조회한다.
SELECT * 
FROM RECEIPT
WHERE USERID = :USERID;